{
    "directory_name": "infer_2023_06_21_01_02_20",
    "emissions": {
        "timestamp": {
            "0": "2023-06-21T01:02:24",
            "1": "2023-06-21T01:03:12"
        },
        "project_name": {
            "0": "codecarbon",
            "1": "codecarbon"
        },
        "run_id": {
            "0": "1c59f1cd-5e9e-4ec7-9662-5b19855426e6",
            "1": "1c59f1cd-5e9e-4ec7-9662-5b19855426e6"
        },
        "duration": {
            "0": 0.7637500762939453,
            "1": 48.20895051956177
        },
        "emissions": {
            "0": 1.3717531787002992e-06,
            "1": 1.3717531787002992e-06
        },
        "emissions_rate": {
            "0": 1.796075995640688e-06,
            "1": 2.845432567845845e-08
        },
        "cpu_power": {
            "0": 5.803351741652477,
            "1": 5.803351741652477
        },
        "gpu_power": {
            "0": 0.0,
            "1": 0.0
        },
        "ram_power": {
            "0": 11.714675903320314,
            "1": 11.714675903320314
        },
        "cpu_energy": {
            "0": 1.3917686134139098e-06,
            "1": 1.3917686134139098e-06
        },
        "gpu_energy": {
            "0": 0,
            "1": 0
        },
        "ram_energy": {
            "0": 2.4797734765797944e-06,
            "1": 2.4797734765797944e-06
        },
        "energy_consumed": {
            "0": 3.871542089993704e-06,
            "1": 3.871542089993704e-06
        },
        "country_name": {
            "0": "Germany",
            "1": "Germany"
        },
        "country_iso_code": {
            "0": "DEU",
            "1": "DEU"
        },
        "region": {
            "0": NaN,
            "1": NaN
        },
        "cloud_provider": {
            "0": NaN,
            "1": NaN
        },
        "cloud_region": {
            "0": NaN,
            "1": NaN
        },
        "os": {
            "0": "Linux-5.19.0-35-generic-x86_64-with-debian-bookworm-sid",
            "1": "Linux-5.19.0-35-generic-x86_64-with-debian-bookworm-sid"
        },
        "python_version": {
            "0": "3.7.12",
            "1": "3.7.12"
        },
        "codecarbon_version": {
            "0": "2.2.3",
            "1": "2.2.3"
        },
        "cpu_count": {
            "0": 8,
            "1": 8
        },
        "cpu_model": {
            "0": "Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz",
            "1": "Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz"
        },
        "gpu_count": {
            "0": NaN,
            "1": NaN
        },
        "gpu_model": {
            "0": NaN,
            "1": NaN
        },
        "longitude": {
            "0": NaN,
            "1": NaN
        },
        "latitude": {
            "0": NaN,
            "1": NaN
        },
        "ram_total_size": {
            "0": 31.2391357421875,
            "1": 31.2391357421875
        },
        "tracking_mode": {
            "0": "machine",
            "1": "machine"
        },
        "on_cloud": {
            "0": "N",
            "1": "N"
        },
        "pue": {
            "0": 1.0,
            "1": 1.0
        }
    },
    "error": [
        "Graph execution error:",
        "",
        "Detected at node 'model/multi_category_encoding/split' defined at (most recent call last):",
        "File \"run.py\", line 144, in <module>",
        "main(args)",
        "File \"run.py\", line 90, in main",
        "'metrics': evaluate(forecast, groundtruth),",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 283, in evaluate",
        "agg_metrics, item_metrics = evaluator(groundtruth, forecast)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 271, in __call__",
        "rows.append(self.get_metrics_per_ts(ts, forecast))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 394, in get_metrics_per_ts",
        "if not validate_forecast(forecast, self.quantiles):",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in validate_forecast",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in <genexpr>",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in quantile",
        "for model in self.models",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in <genexpr>",
        "for model in self.models",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/tasks/structured_data.py\", line 165, in predict",
        "return super().predict(x=x, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/auto_model.py\", line 455, in predict",
        "y = model.predict(dataset, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2350, in predict",
        "tmp_batch_outputs = self.predict_function(iterator)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 880, in __call__",
        "result = self._call(*args, **kwds)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 928, in _call",
        "self._initialize(args, kwds, add_initializers_to=initializers)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 751, in _initialize",
        "*args, **kwds))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 162, in _get_concrete_function_internal_garbage_collected",
        "concrete_function, _ = self._maybe_define_concrete_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 157, in _maybe_define_concrete_function",
        "return self._maybe_define_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 360, in _maybe_define_function",
        "concrete_function = self._create_concrete_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 293, in _create_concrete_function",
        "capture_by_value=self._capture_by_value),",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 1283, in func_graph_from_py_func",
        "func_outputs = python_func(*func_args, **func_kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 645, in wrapped_fn",
        "out = weak_wrapped_fn().__wrapped__(*args, **kwds)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 1265, in autograph_handler",
        "user_requested=True,",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2137, in predict_function",
        "return step_function(self, iterator)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2123, in step_function",
        "outputs = model.distribute_strategy.run(run_step, args=(data,))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 1316, in run",
        "return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 2895, in call_for_each_replica",
        "return self._call_for_each_replica(fn, args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 3696, in _call_for_each_replica",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2111, in run_step",
        "outputs = model.predict_step(data)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2079, in predict_step",
        "return self(x, training=False)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 561, in __call__",
        "return super().__call__(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/base_layer.py\", line 1132, in __call__",
        "outputs = call_fn(inputs, *args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 96, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/functional.py\", line 511, in call",
        "return self._run_internal_graph(inputs, training=training, mask=mask)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/functional.py\", line 668, in _run_internal_graph",
        "outputs = node.layer(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/base_layer.py\", line 1132, in __call__",
        "outputs = call_fn(inputs, *args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 96, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/keras_layers.py\", line 97, in call",
        "split_inputs = tf.split(input_nodes, [1] * len(self.encoding), axis=-1)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py\", line 1176, in op_dispatch_handler",
        "return dispatch_target(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/ops/array_ops.py\", line 2202, in split",
        "value=value, size_splits=size_splits, axis=axis, num_split=num, name=name)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 10297, in split_v",
        "num_split=num_split, name=name)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 797, in _apply_op_helper",
        "attrs=attr_protos, op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 751, in _create_op_internal",
        "compute_device)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 3806, in _create_op_internal",
        "op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 2106, in __init__",
        "c_op = _create_c_op(g, node_def, inputs, control_input_ops, op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 1972, in _create_c_op",
        "tf_stack.extract_stack_for_op(c_op, stacklevel=3)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/tf_stack.py\", line 182, in extract_stack_for_op",
        "_source_filter_stacks[thread_key][-1].internal_set, c_op, stacklevel)",
        "Node: 'model/multi_category_encoding/split'",
        "Determined shape must either match input shape along split_dim exactly if fully specified, or be less than the size of the input along split_dim if not fully specified.  Got: 65",
        "[[{{node model/multi_category_encoding/split}}]] [Op:__inference_predict_function_4990158]",
        "Traceback (most recent call last):",
        "File \"run.py\", line 90, in main",
        "'metrics': evaluate(forecast, groundtruth),",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 283, in evaluate",
        "agg_metrics, item_metrics = evaluator(groundtruth, forecast)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 271, in __call__",
        "rows.append(self.get_metrics_per_ts(ts, forecast))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 394, in get_metrics_per_ts",
        "if not validate_forecast(forecast, self.quantiles):",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in validate_forecast",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in <genexpr>",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in quantile",
        "for model in self.models",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in <genexpr>",
        "for model in self.models",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/tasks/structured_data.py\", line 165, in predict",
        "return super().predict(x=x, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/auto_model.py\", line 455, in predict",
        "y = model.predict(dataset, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler",
        "raise e.with_traceback(filtered_tb) from None",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/execute.py\", line 53, in quick_execute",
        "inputs, attrs, num_outputs)",
        "tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:",
        "",
        "Detected at node 'model/multi_category_encoding/split' defined at (most recent call last):",
        "File \"run.py\", line 144, in <module>",
        "main(args)",
        "File \"run.py\", line 90, in main",
        "'metrics': evaluate(forecast, groundtruth),",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 283, in evaluate",
        "agg_metrics, item_metrics = evaluator(groundtruth, forecast)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 271, in __call__",
        "rows.append(self.get_metrics_per_ts(ts, forecast))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 394, in get_metrics_per_ts",
        "if not validate_forecast(forecast, self.quantiles):",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in validate_forecast",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/gluonts/evaluation/_base.py\", line 132, in <genexpr>",
        "~np.isnan(forecast.quantile(q.value)).any() for q in quantiles",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in quantile",
        "for model in self.models",
        "File \"/home/fischer/repos/interp-energy-meta-forecasting/methods.py\", line 50, in <genexpr>",
        "for model in self.models",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/tasks/structured_data.py\", line 165, in predict",
        "return super().predict(x=x, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/auto_model.py\", line 455, in predict",
        "y = model.predict(dataset, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2350, in predict",
        "tmp_batch_outputs = self.predict_function(iterator)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 880, in __call__",
        "result = self._call(*args, **kwds)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 928, in _call",
        "self._initialize(args, kwds, add_initializers_to=initializers)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 751, in _initialize",
        "*args, **kwds))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 162, in _get_concrete_function_internal_garbage_collected",
        "concrete_function, _ = self._maybe_define_concrete_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 157, in _maybe_define_concrete_function",
        "return self._maybe_define_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 360, in _maybe_define_function",
        "concrete_function = self._create_concrete_function(args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\", line 293, in _create_concrete_function",
        "capture_by_value=self._capture_by_value),",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 1283, in func_graph_from_py_func",
        "func_outputs = python_func(*func_args, **func_kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\", line 645, in wrapped_fn",
        "out = weak_wrapped_fn().__wrapped__(*args, **kwds)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 1265, in autograph_handler",
        "user_requested=True,",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2137, in predict_function",
        "return step_function(self, iterator)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2123, in step_function",
        "outputs = model.distribute_strategy.run(run_step, args=(data,))",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 1316, in run",
        "return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 2895, in call_for_each_replica",
        "return self._call_for_each_replica(fn, args, kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py\", line 3696, in _call_for_each_replica",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2111, in run_step",
        "outputs = model.predict_step(data)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 2079, in predict_step",
        "return self(x, training=False)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/training.py\", line 561, in __call__",
        "return super().__call__(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/base_layer.py\", line 1132, in __call__",
        "outputs = call_fn(inputs, *args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 96, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/functional.py\", line 511, in call",
        "return self._run_internal_graph(inputs, training=training, mask=mask)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/functional.py\", line 668, in _run_internal_graph",
        "outputs = node.layer(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/engine/base_layer.py\", line 1132, in __call__",
        "outputs = call_fn(inputs, *args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/keras/utils/traceback_utils.py\", line 96, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/autokeras/keras_layers.py\", line 97, in call",
        "split_inputs = tf.split(input_nodes, [1] * len(self.encoding), axis=-1)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py\", line 1176, in op_dispatch_handler",
        "return dispatch_target(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/ops/array_ops.py\", line 2202, in split",
        "value=value, size_splits=size_splits, axis=axis, num_split=num, name=name)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 10297, in split_v",
        "num_split=num_split, name=name)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 797, in _apply_op_helper",
        "attrs=attr_protos, op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py\", line 751, in _create_op_internal",
        "compute_device)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 3806, in _create_op_internal",
        "op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 2106, in __init__",
        "c_op = _create_c_op(g, node_def, inputs, control_input_ops, op_def=op_def)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/traceback_utils.py\", line 150, in error_handler",
        "return fn(*args, **kwargs)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/framework/ops.py\", line 1972, in _create_c_op",
        "tf_stack.extract_stack_for_op(c_op, stacklevel=3)",
        "File \"/home/fischer/.conda/envs/autokeras/lib/python3.7/site-packages/tensorflow/python/util/tf_stack.py\", line 182, in extract_stack_for_op",
        "_source_filter_stacks[thread_key][-1].internal_set, c_op, stacklevel)",
        "Node: 'model/multi_category_encoding/split'",
        "Determined shape must either match input shape along split_dim exactly if fully specified, or be less than the size of the input along split_dim if not fully specified.  Got: 65",
        "[[{{node model/multi_category_encoding/split}}]] [Op:__inference_predict_function_4990158]"
    ],
    "execution_platform": {
        "System": "Linux",
        "Node Name": "lamarrws03",
        "Release": "5.19.0-35-generic",
        "Version": "#36~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Feb 17 15:17:25 UTC 2",
        "Machine": "x86_64",
        "Processor": "Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz",
        "Physical cores": 4,
        "Total cores": 8,
        "Max Frequency": 4000.0,
        "Min Frequency": 800.0,
        "Current Frequency": 1975.3854999999999,
        "Total": 33542766592,
        "Available": 31229202432,
        "Used": 1771360256
    },
    "requirements": [
        "# 3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:21)",
        "# [GCC 9.4.0]",
        "wrapt==1.11.2",
        "typed-ast==1.4.0",
        "six==1.12.0",
        "setuptools==41.6.0",
        "pytz==2019.3",
        "python-dateutil==2.8.0",
        "pyparsing==2.4.2",
        "pylint==2.4.3",
        "mccabe==0.6.1",
        "matplotlib==3.1.1",
        "lazy-object-proxy==1.4.3",
        "kiwisolver==1.1.0",
        "isort==4.3.21",
        "cycler==0.10.0",
        "astroid==2.3.2",
        "zipp==3.15.0",
        "wheel==0.40.0",
        "werkzeug==2.2.3",
        "urllib3==1.26.16",
        "typing-extensions==4.6.3",
        "tqdm==4.65.0",
        "toolz==0.12.0",
        "termcolor==2.3.0",
        "tensorflow==2.11.0",
        "tensorflow-io-gcs-filesystem==0.32.0",
        "tensorflow-estimator==2.11.0",
        "tensorboard==2.11.2",
        "tensorboard-plugin-wit==1.8.1",
        "tensorboard-data-server==0.6.1",
        "rsa==4.9",
        "requests==2.31.0",
        "requests-oauthlib==1.3.1",
        "pynvml==11.5.0",
        "pydantic==1.10.9",
        "pyasn1==0.5.0",
        "pyasn1-modules==0.3.0",
        "py-cpuinfo==9.0.0",
        "psutil==5.9.5",
        "protobuf==3.19.6",
        "pip==23.1.2",
        "pandas==1.3.5",
        "packaging==23.1",
        "opt-einsum==3.3.0",
        "oauthlib==3.2.2",
        "numpy==1.21.6",
        "markupsafe==2.1.3",
        "markdown==3.4.3",
        "libclang==16.0.0",
        "kt-legacy==1.0.5",
        "keras==2.11.0",
        "keras-tuner==1.3.5",
        "importlib-metadata==6.6.0",
        "idna==3.4",
        "h5py==3.8.0",
        "grpcio==1.54.2",
        "google-pasta==0.2.0",
        "google-auth==2.20.0",
        "google-auth-oauthlib==0.4.6",
        "gluonts==0.13.2",
        "gast==0.4.0",
        "fuzzywuzzy==0.18.0",
        "flatbuffers==23.5.26",
        "codecarbon==2.2.3",
        "click==8.1.3",
        "charset-normalizer==3.1.0",
        "certifi==2023.5.7",
        "cachetools==5.3.1",
        "autokeras==1.0.20",
        "astunparse==1.6.3",
        "arrow==1.2.3",
        "absl-py==1.4.0"
    ],
    "config": {
        "dataset": "m4_weekly_dataset",
        "model": "autokeras",
        "output_dir": "mnt_data/autokeras/",
        "ds_seed": -1,
        "epochs": 100,
        "datadir": "mnt_data/data",
        "cpu_monitor_interval": 0.5,
        "seed": 42,
        "timestamp": "2023_06_21_01_02_20",
        "lag": 65,
        "train_logdir": "mnt_data/autokeras/train_2023_06_21_00_08_12"
    },
    "full_log": "results/merged_autokeras_new/infer_2023_06_21_01_02_20.tar.gz"
}